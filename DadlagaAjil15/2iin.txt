Мэдээжийн хэрэг, өгсөн C програмыг задалъя:

#include <stdio.h>:

Энэ нь програмын стандарт оролт/гаралтын функцуудыг агуулсан урьдчилсан процессорын заавар юм.
#include <string.h>:

Энэхүү препроцессорын заавар нь мөрийг удирдах функцуудыг агуулдаг.
int main():

Програмын нэвтрэх цэг болдог үндсэн функц.
char s[100];:

Хамгийн ихдээ 100 тэмдэгтийн багтаамжтай s тэмдэгтийн массивыг зарлана. Энэ массив нь оролтын мөрийг хадгалахад хэрэглэгддэг.
printf("Мөр оруулна уу: ");:

"Мөр оруулах:" мөрийг консол руу гаргаж, хэрэглэгчээс мөр оруулахыг сануулна.
fgets(s, sizeof(s), stdin);:

Хэрэглэгчийн оролтын мөрийг хоосон зай оруулан уншиж, s массивт хадгална. Sizeof(s) нь оролт нь массивын багтаамжаас хэтрэхгүй байхыг баталгаажуулдаг.
int n = strlen(s);:

Оруулсан мөрийн уртыг strlen функцээр тооцоод n хувьсагчд хадгална.
int эгшиг тоо = 0;:

vowelCount хувьсагчийг 0 болгон эхлүүлнэ. Энэ хувьсагчийг оруулсан тэмдэгт мөр дэх эгшгийн тоог тоолоход ашиглана.
хувьд (int i = 0; i < n; i++) { ... }:

Оруулсан мөр дэх тэмдэгт бүрээр давтагдах давталтыг эхлүүлнэ.
if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' || s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' | | s[i] == 'U') { ... }:

Одоогийн тэмдэгт нь эгшиг (жижиг эсвэл том үсэг) эсэхийг шалгана.
эгшиг тоо++;:

Хэрэв эгшиг олдвол vowelCount хувьсагчийг нэмэгдүүлнэ.
printf("Эгшигний тоо: %d\n", эгшиг тоо);:

Оруулсан мөрөнд нийт эгшгийн тоог хэвлэнэ.
буцаах 0;:

Энэ нь програм амжилттай хэрэгжсэнийг илтгэж, үйлдлийн системд 0-г буцаана.
Дүгнэж хэлэхэд, энэ программ нь хэрэглэгчээс мөр оруулахыг сануулж, оруулсан мөрөнд байгаа эгшгийн тоог (жижиг, том үсгийн аль аль нь) тоолж, дараа нь консол дээр тооллыг хэвлэнэ. Програм нь мөр дэх тэмдэгт бүрийг давтахдаа гогцоо, тэмдэгт нь эгшиг мөн эсэхийг шалгах if хэллэгийг ашигладаг. Үр дүн нь C хэл дээрх үндсэн оролттой харьцах, тэмдэгтүүдийг харьцуулах энгийн жишээ юм.